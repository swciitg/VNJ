/***********************************************************************
 * Copyright (C) 2005-2011 Sigma Designs, Inc. 
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 **********************************************************************/

/*
  autogenerated from mlcdevicecfg.rd

  must include rmdef.h, also define BFLOG and BFASSERT appropriately

 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 2.1 as
 * published by the Free Software Foundation.
 */

#ifndef __MLCDEVICECFG_H__
#define __MLCDEVICECFG_H__

#define MLCDEVICECFG_erase_cycle_SHIFT 4 /*  */
#define MLCDEVICECFG_erase_cycle_WIDTH 3 
#define MLCDEVICECFG_tot_cycle_SHIFT 0 /*  */
#define MLCDEVICECFG_tot_cycle_WIDTH 3 

#define insMLCDEVICECFG(r1,r2,key) ins r1, r2, MLCDEVICECFG_ ## key ## _SHIFT, MLCDEVICECFG_ ## key ## _WIDTH
#define extMLCDEVICECFG(r1,r2,key) ext r1, r2, MLCDEVICECFG_ ## key ## _SHIFT, MLCDEVICECFG_ ## key ## _WIDTH

#ifndef __ASSEMBLY__

#define wMLCDEVICECFG(px,key,v) \
do { \
        BFASSERT(((v)>>MLCDEVICECFG_ ## key ## _WIDTH)==0,"too large\n"); \
        RMinsShiftBits(px,v,MLCDEVICECFG_ ## key ## _WIDTH,MLCDEVICECFG_ ## key ## _SHIFT); \
} \
while (0)

#define rMLCDEVICECFG(x,key) RMunshiftBits(x,MLCDEVICECFG_ ## key ## _WIDTH,MLCDEVICECFG_ ## key ##_SHIFT)

#ifdef BFPROTO
BFCLASS void logMLCDEVICECFG(RMuint32 x);
#endif
BFCLASS void logMLCDEVICECFG(RMuint32 x)
{
	RMuint32 v;
	
	BFLOG("MLCDEVICECFG: 0x%08lx is",x);

	v=RMunshiftBits(x,MLCDEVICECFG_erase_cycle_WIDTH,MLCDEVICECFG_erase_cycle_SHIFT);

        BFLOG(" erase_cycle=0x%x",v);
        RMinsShiftBits(&x,0,MLCDEVICECFG_erase_cycle_WIDTH,MLCDEVICECFG_erase_cycle_SHIFT);

	v=RMunshiftBits(x,MLCDEVICECFG_tot_cycle_WIDTH,MLCDEVICECFG_tot_cycle_SHIFT);

        BFLOG(" tot_cycle=0x%x",v);
        RMinsShiftBits(&x,0,MLCDEVICECFG_tot_cycle_WIDTH,MLCDEVICECFG_tot_cycle_SHIFT);

	if (x) {
		int i=0;
		
		BFLOG(" (?");
		
		while (1) {
			if (x&1) 
				BFLOG(" %d",i);
			x>>=1;
			if (x==0)
				break;
			i++;
		}
		BFLOG(")");
	}
	
	BFLOG("\n");
}

union MLCDEVICECFGReg {
        struct { RMuint32 // lsbs...
                tot_cycle: 3,
                                                hole4: 1,
                erase_cycle: 3,
                                                hole0: 25; // ... to msbs
        } bits;

        RMuint32 value;
};

#endif /* __ASSEMBLY__ */

#endif /* __MLCDEVICECFG_H__ */
